// projects/09/segment/Segment.jack

/**
 *  Implements a graphical Snek.
 *  The Snek is composed of a head and a tail. The head draws the Snek as
 *  it moves, and the tail undraws the Snek. The head takes its movements
 *  directly from user input, whereas the tail follows a queue of moves
 *  fed from user input, where the queue is as long as the snake.
 */
class Snek {

    field Segment m_head;
    field Segment m_tail;
    field int m_length;

    //field Array m_movements;

    constructor Snek new(int length) {
        let m_length = length;
        
        // set up segments
        let m_head = Segment.new(200, 100, 10, /* isHead = */ true);
        let m_tail = Segment.new(180, 100, 10, /* isHead = */ false);

        do m_head.draw();

        return this;
    }

    method void dispose() {
        do m_head.dispose();
        do m_tail.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void moveUp() {
        do m_head.moveUp();
        do m_tail.moveUp();
        return;
    }

    method void moveDown() {
        do m_head.moveDown();
        do m_tail.moveDown();
        return;
    }

    method void moveLeft() {
        do m_head.moveLeft();
        do m_tail.moveLeft();
        return;
    }

    method void moveRight() {
        do m_head.moveRight();
        do m_tail.moveRight();
        return;
    }

} // class Snek

