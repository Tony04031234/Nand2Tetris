// projects/09/segment/Segment.jack

/**
 * Implements a graphic segment to be used as parts of the snake and as
 * delishuz snacks. 
 */
class Segment {

    // Location on the screen
    field int x, y;

    // Whether the segment is a head (true) or tail (false)
    field bool m_isHead;

    // The size of the segment
    field int size;

    /** Constructs a new segment with a given location and size. */
    constructor Segment new(int Ax, int Ay, int Asize, bool isHead) {
        let x = Ax;
        let y = Ay;
        let size = Asize;
        let m_isHead = isHead;

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the segment on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Erases the segment from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Increments the size by 2 pixels. */
    method void incSize() {
        if (((y + size) < 254) & ((x + size) < 510)) {
            do erase();
            let size = size + 2;
            do draw();
        }
        return;
    }

    /** Decrements the size by 2 pixels. */
    method void decSize() {
        if (size > 2) {
            do erase();
            let size = size - 2;
            do draw();
        }
        return;
	}

    method void moveUp() {
        if (m_isHead) {
            do Screen.setColor(true);
        } else {
            do Screen.setColor(false);
        }
        if (y > 1) {
            let y = y - 5;
        } else {
            let y = 250;
        }
        do Screen.drawRectangle(x, y, x + size, y + 5);
        return;
    }

    method void moveDown() {
        if (m_isHead) {
            do Screen.setColor(true);
        } else {
            do Screen.setColor(false);
        }
        if (y < 250) {
            let y = y + 5;
        } else {
            let y = 0;
        }
        do Screen.drawRectangle(x, (y + size) - 5, x + size, y + size);
        return;
    }

    method void moveLeft() {
        if (m_isHead) {
            do Screen.setColor(true);
        } else {
            do Screen.setColor(false);
        }
        if (x > 1) {
            let x = x - 5;
        } else {
            let x = 506;
        }
        do Screen.drawRectangle(x, y, x + 5, y + size);
        return;
    }

    method void moveRight() {
        if (m_isHead) {
          do Screen.setColor(true);
        } else {
          do Screen.setColor(false);
        }
        if ((x + size) < 506) {
            let x = x + 5;
        } else {
            let x = 0;
        }
        do Screen.drawRectangle((x + size) - 5, y, x + size, y + 5);
        return;
    }
}
